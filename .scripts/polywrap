#!/bin/bash

# Adapted from https://github.com/ntcarlson/dotfiles/blob/gamma/i3/scripts/polybar_wrapper

WINDOW_ID_ROFI=/tmp/window_id_rofi
WINDOW_ID_TRAY=/tmp/window_id_tray

create_bar() {
    polybar $1 &
    local bar_id=$!
    echo "Polybar PID: $bar_id"
    local win_id=$(xdotool search --sync --pid $bar_id)
    echo $win_id > $2
    xdotool windowunmap $win_id
}

animation_open() {
    local bar_id;
    for bar_id in $@; do
        xdotool windowmap $bar_id
    done
    for y in `seq -300 10 0`; do
        for bar_id in $@; do
            xdotool windowmove $bar_id x $y
        done
        sleep 0.001
    done
}

animation_close() {
    for y in `seq 0 -10 -300`; do
        for bar_id in $@; do
            xdotool windowmove $bar_id x $y
        done
    done
    for bar_id in $@; do
        xdotool windowunmap $bar_id
    done
}

launch() {
    killall -q polybar
    while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done
    for m in $(polybar --list-monitors | cut -d":" -f1); do
      MONITOR=$m polybar --reload main &
      bar_id=$!
    done
    echo "$bar_id"
    rm -f /tmp/polybar_mqueue_full
    ln -s /tmp/polybar_mqueue.$bar_id /tmp/polybar_mqueue_full
    create_bar tray $WINDOW_ID_TRAY &
    sleep 1
    xdotool windowunmap $(cat $WINDOW_ID_TRAY | awk '{print $2}') # auto hide tray on startup
}

rofi_open() {
    rofi -show drun -location 1 -show-icons -yoffset 28 -xoffset 3
}

search_open() {
    rofi -show window -location 1 -width 28 -yoffset 28 -xoffset 3
}

wifi_open() {
    python $HOME/.scripts/networkmanager_dmenu
}

tray_open() {
    local bar_id=$(cat $WINDOW_ID_TRAY | awk '{print $2}')
         if xprop -id $bar_id | grep "Normal"; then
              xdotool windowunmap $bar_id
         elif xprop -id $bar_id | grep "Withdrawn"; then
              xdotool windowmap $bar_id
         fi
}

case "$1" in
    rofi)
        rofi_open;;
    search)
        search_open;;
    wifi)
        wifi_open;;
    tray)
        tray_open;;
    launch)
        launch;;
esac
